

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Aug 02 17:30:26 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     008F                     	;# 
    96     0090                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0095                     	;# 
   104     0096                     	;# 
   105     0097                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009A                     	;# 
   109     009B                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     0105                     	;# 
   115     0107                     	;# 
   116     0108                     	;# 
   117     0109                     	;# 
   118     010C                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     0185                     	;# 
   124     0187                     	;# 
   125     0188                     	;# 
   126     0189                     	;# 
   127     018C                     	;# 
   128     018D                     	;# 
   129     0000                     	;# 
   130     0001                     	;# 
   131     0002                     	;# 
   132     0003                     	;# 
   133     0004                     	;# 
   134     0005                     	;# 
   135     0006                     	;# 
   136     0007                     	;# 
   137     0008                     	;# 
   138     0009                     	;# 
   139     000A                     	;# 
   140     000B                     	;# 
   141     000C                     	;# 
   142     000D                     	;# 
   143     000E                     	;# 
   144     000E                     	;# 
   145     000F                     	;# 
   146     0010                     	;# 
   147     0011                     	;# 
   148     0012                     	;# 
   149     0013                     	;# 
   150     0014                     	;# 
   151     0015                     	;# 
   152     0015                     	;# 
   153     0016                     	;# 
   154     0017                     	;# 
   155     0018                     	;# 
   156     0019                     	;# 
   157     001A                     	;# 
   158     001B                     	;# 
   159     001B                     	;# 
   160     001C                     	;# 
   161     001D                     	;# 
   162     001E                     	;# 
   163     001F                     	;# 
   164     0081                     	;# 
   165     0085                     	;# 
   166     0086                     	;# 
   167     0087                     	;# 
   168     0088                     	;# 
   169     0089                     	;# 
   170     008C                     	;# 
   171     008D                     	;# 
   172     008E                     	;# 
   173     008F                     	;# 
   174     0090                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0095                     	;# 
   182     0096                     	;# 
   183     0097                     	;# 
   184     0098                     	;# 
   185     0099                     	;# 
   186     009A                     	;# 
   187     009B                     	;# 
   188     009C                     	;# 
   189     009D                     	;# 
   190     009E                     	;# 
   191     009F                     	;# 
   192     0105                     	;# 
   193     0107                     	;# 
   194     0108                     	;# 
   195     0109                     	;# 
   196     010C                     	;# 
   197     010C                     	;# 
   198     010D                     	;# 
   199     010E                     	;# 
   200     010F                     	;# 
   201     0185                     	;# 
   202     0187                     	;# 
   203     0188                     	;# 
   204     0189                     	;# 
   205     018C                     	;# 
   206     018D                     	;# 
   207     0009                     _PORTE	set	9
   208     0007                     _PORTC	set	7
   209     0006                     _PORTB	set	6
   210     0005                     _PORTA	set	5
   211     0008                     _PORTD	set	8
   212     0038                     _RC0	set	56
   213     0039                     _RC1	set	57
   214     0033                     _RB3	set	51
   215     0032                     _RB2	set	50
   216     0031                     _RB1	set	49
   217     0030                     _RB0	set	48
   218     002B                     _RA3	set	43
   219     002A                     _RA2	set	42
   220     0029                     _RA1	set	41
   221     0028                     _RA0	set	40
   222     0048                     _RE0	set	72
   223     0049                     _RE1	set	73
   224     0089                     _TRISE	set	137
   225     0088                     _TRISD	set	136
   226     0087                     _TRISC	set	135
   227     0086                     _TRISB	set	134
   228     0085                     _TRISA	set	133
   229     0189                     _ANSELH	set	393
   230     0188                     _ANSEL	set	392
   231                           
   232                           	psect	strings
   233     0003                     __pstrings:
   234     0003                     stringtab:
   235     0003                     __stringtab:
   236     0003                     stringcode:	
   237                           ;	String table - string pointers are 1 byte each
   238                           
   239     0003                     stringdir:
   240     0003  3000               	movlw	high stringdir
   241     0004  008A               	movwf	10
   242     0005  0804               	movf	4,w
   243     0006  0A84               	incf	4,f
   244     0007  0782               	addwf	2,f
   245     0008                     __stringbase:
   246     0008  3400               	retlw	0
   247     0009                     __end_of__stringtab:
   248     0009                     STR_3:
   249     0009  3473               	retlw	115	;'s'
   250     000A  3465               	retlw	101	;'e'
   251     000B  3463               	retlw	99	;'c'
   252     000C  346F               	retlw	111	;'o'
   253     000D  346E               	retlw	110	;'n'
   254     000E  3464               	retlw	100	;'d'
   255     000F  3420               	retlw	32	;' '
   256     0010  3466               	retlw	102	;'f'
   257     0011  346C               	retlw	108	;'l'
   258     0012  346F               	retlw	111	;'o'
   259     0013  346F               	retlw	111	;'o'
   260     0014  3472               	retlw	114	;'r'
   261     0015  3400               	retlw	0
   262     0016                     STR_1:
   263     0016  3467               	retlw	103	;'g'
   264     0017  3472               	retlw	114	;'r'
   265     0018  346F               	retlw	111	;'o'
   266     0019  3475               	retlw	117	;'u'
   267     001A  346E               	retlw	110	;'n'
   268     001B  3464               	retlw	100	;'d'
   269     001C  3420               	retlw	32	;' '
   270     001D  3466               	retlw	102	;'f'
   271     001E  346C               	retlw	108	;'l'
   272     001F  346F               	retlw	111	;'o'
   273     0020  346F               	retlw	111	;'o'
   274     0021  3472               	retlw	114	;'r'
   275     0022  3400               	retlw	0
   276     0023                     STR_4:
   277     0023  3474               	retlw	116	;'t'
   278     0024  3468               	retlw	104	;'h'
   279     0025  3469               	retlw	105	;'i'
   280     0026  3472               	retlw	114	;'r'
   281     0027  3464               	retlw	100	;'d'
   282     0028  3420               	retlw	32	;' '
   283     0029  3466               	retlw	102	;'f'
   284     002A  346C               	retlw	108	;'l'
   285     002B  346F               	retlw	111	;'o'
   286     002C  346F               	retlw	111	;'o'
   287     002D  3472               	retlw	114	;'r'
   288     002E  3400               	retlw	0
   289     002F                     STR_2:
   290     002F  3466               	retlw	102	;'f'
   291     0030  3469               	retlw	105	;'i'
   292     0031  3472               	retlw	114	;'r'
   293     0032  3473               	retlw	115	;'s'
   294     0033  3474               	retlw	116	;'t'
   295     0034  3420               	retlw	32	;' '
   296     0035  3466               	retlw	102	;'f'
   297     0036  346C               	retlw	108	;'l'
   298     0037  346F               	retlw	111	;'o'
   299     0038  346F               	retlw	111	;'o'
   300     0039  3472               	retlw	114	;'r'
   301     003A  3400               	retlw	0
   302                           
   303                           	psect	cinit
   304     07FC                     start_initialization:	
   305                           ; #config settings
   306                           
   307     07FC                     __initialization:
   308     07FC                     end_of_initialization:	
   309                           ;End of C runtime variable initialization code
   310                           
   311     07FC                     __end_of__initialization:
   312     07FC  0183               	clrf	3
   313     07FD  120A  118A  2F1E   	ljmp	_main	;jump to C main() function
   314                           
   315                           	psect	cstackCOMMON
   316     0070                     __pcstackCOMMON:
   317     0070                     ?_delay:
   318     0070                     ?_enable:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ?_main:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     delay@a:	
   325                           ; 1 bytes @ 0x0
   326                           
   327                           
   328                           ; 2 bytes @ 0x0
   329     0070                     	ds	2
   330     0072                     ??_delay:
   331     0072                     ??_enable:	
   332                           ; 1 bytes @ 0x2
   333                           
   334     0072                     ?_lcd:	
   335                           ; 1 bytes @ 0x2
   336                           
   337     0072                     ?_string:	
   338                           ; 1 bytes @ 0x2
   339                           
   340     0072                     lcd@data:	
   341                           ; 1 bytes @ 0x2
   342                           
   343     0072                     string@data:	
   344                           ; 1 bytes @ 0x2
   345                           
   346                           
   347                           ; 1 bytes @ 0x2
   348     0072                     	ds	1
   349     0073                     ??_lcd:
   350     0073                     ??_string:	
   351                           ; 1 bytes @ 0x3
   352                           
   353     0073                     lcd@cmd:	
   354                           ; 1 bytes @ 0x3
   355                           
   356     0073                     string@cmd:	
   357                           ; 1 bytes @ 0x3
   358                           
   359                           
   360                           ; 1 bytes @ 0x3
   361     0073                     	ds	1
   362     0074                     string@i:
   363                           
   364                           ; 2 bytes @ 0x4
   365     0074                     	ds	2
   366     0076                     ??_main:
   367                           
   368                           ; 1 bytes @ 0x6
   369     0076                     	ds	1
   370     0077                     main@floor:
   371                           
   372                           ; 2 bytes @ 0x7
   373     0077                     	ds	2
   374     0079                     main@sensor:
   375                           
   376                           ; 2 bytes @ 0x9
   377     0079                     	ds	2
   378                           
   379                           	psect	maintext
   380     071E                     __pmaintext:	
   381 ;;
   382 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   383 ;;
   384 ;; *************** function _main *****************
   385 ;; Defined at:
   386 ;;		line 51 in file "llift2.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;  sensor          2    9[COMMON] int 
   391 ;;  floor           2    7[COMMON] int 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : B00/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   401 ;;      Params:         0       0       0       0       0
   402 ;;      Locals:         4       0       0       0       0
   403 ;;      Temps:          1       0       0       0       0
   404 ;;      Totals:         5       0       0       0       0
   405 ;;Total ram usage:        5 bytes
   406 ;; Hardware stack levels required when called: 3
   407 ;; This function calls:
   408 ;;		_lcd
   409 ;;		_string
   410 ;; This function is called by:
   411 ;;		Startup code after reset
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415     071E                     _main:	
   416                           ;psect for function _main
   417                           
   418     071E                     l803:	
   419                           ;incstack = 0
   420                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   421                           
   422                           
   423                           ;llift2.c: 53:     int floor,sensor;;llift2.c: 55:     PORTA=0x00;
   424     071E  1283               	bcf	3,5	;RP0=0, select bank0
   425     071F  1303               	bcf	3,6	;RP1=0, select bank0
   426     0720  0185               	clrf	5	;volatile
   427                           
   428                           ;llift2.c: 56:     PORTB=0X00;
   429     0721  0186               	clrf	6	;volatile
   430                           
   431                           ;llift2.c: 57:     PORTC=0X00;
   432     0722  0187               	clrf	7	;volatile
   433                           
   434                           ;llift2.c: 58:     PORTD=0X00;
   435     0723  0188               	clrf	8	;volatile
   436                           
   437                           ;llift2.c: 59:     PORTE=0X00;
   438     0724  0189               	clrf	9	;volatile
   439     0725                     l805:
   440                           
   441                           ;llift2.c: 60:     TRISA=0X0F;
   442     0725  300F               	movlw	15
   443     0726  1683               	bsf	3,5	;RP0=1, select bank1
   444     0727  1303               	bcf	3,6	;RP1=0, select bank1
   445     0728  0085               	movwf	5	;volatile
   446     0729                     l807:
   447                           
   448                           ;llift2.c: 61:     TRISB=0X0F;
   449     0729  300F               	movlw	15
   450     072A  0086               	movwf	6	;volatile
   451                           
   452                           ;llift2.c: 62:     TRISC=0X00;
   453     072B  0187               	clrf	7	;volatile
   454                           
   455                           ;llift2.c: 63:     TRISD=0X00;
   456     072C  0188               	clrf	8	;volatile
   457                           
   458                           ;llift2.c: 64:     TRISE=0X00;
   459     072D  0189               	clrf	9	;volatile
   460                           
   461                           ;llift2.c: 65:     ANSEL=0x00;
   462     072E  1683               	bsf	3,5	;RP0=1, select bank3
   463     072F  1703               	bsf	3,6	;RP1=1, select bank3
   464     0730  0188               	clrf	8	;volatile
   465                           
   466                           ;llift2.c: 66:     ANSELH=0X00;
   467     0731  0189               	clrf	9	;volatile
   468     0732                     l809:
   469                           
   470                           ;llift2.c: 67:     lcd(0,0x38);
   471     0732  3038               	movlw	56
   472     0733  00F2               	movwf	lcd@data
   473     0734  3000               	movlw	0
   474     0735  120A  118A  26C0  120A  118A  	fcall	_lcd
   475     073A                     l811:
   476                           
   477                           ;llift2.c: 68:     lcd(0,0x0E);
   478     073A  300E               	movlw	14
   479     073B  00F2               	movwf	lcd@data
   480     073C  3000               	movlw	0
   481     073D  120A  118A  26C0  120A  118A  	fcall	_lcd
   482     0742                     l813:
   483                           
   484                           ;llift2.c: 71:     {;llift2.c: 72:         if(RA0==1)
   485     0742  1283               	bcf	3,5	;RP0=0, select bank0
   486     0743  1303               	bcf	3,6	;RP1=0, select bank0
   487     0744  1C05               	btfss	5,0	;volatile
   488     0745  2F47               	goto	u241
   489     0746  2F48               	goto	u240
   490     0747                     u241:
   491     0747  2F4A               	goto	l817
   492     0748                     u240:
   493     0748                     l815:
   494                           
   495                           ;llift2.c: 73:         {;llift2.c: 74:             floor=0;
   496     0748  01F7               	clrf	main@floor
   497     0749  01F8               	clrf	main@floor+1
   498     074A                     l817:
   499                           
   500                           ;llift2.c: 76:         if(RA1==1)
   501     074A  1C85               	btfss	5,1	;volatile
   502     074B  2F4D               	goto	u251
   503     074C  2F4E               	goto	u250
   504     074D                     u251:
   505     074D  2F52               	goto	l821
   506     074E                     u250:
   507     074E                     l819:
   508                           
   509                           ;llift2.c: 77:         {;llift2.c: 78:             floor=1;
   510     074E  3001               	movlw	1
   511     074F  00F7               	movwf	main@floor
   512     0750  3000               	movlw	0
   513     0751  00F8               	movwf	main@floor+1
   514     0752                     l821:
   515                           
   516                           ;llift2.c: 80:         if(RA2==1)
   517     0752  1D05               	btfss	5,2	;volatile
   518     0753  2F55               	goto	u261
   519     0754  2F56               	goto	u260
   520     0755                     u261:
   521     0755  2F5A               	goto	l825
   522     0756                     u260:
   523     0756                     l823:
   524                           
   525                           ;llift2.c: 81:         {;llift2.c: 82:             floor=2;
   526     0756  3002               	movlw	2
   527     0757  00F7               	movwf	main@floor
   528     0758  3000               	movlw	0
   529     0759  00F8               	movwf	main@floor+1
   530     075A                     l825:
   531                           
   532                           ;llift2.c: 84:         if(RA3==1)
   533     075A  1D85               	btfss	5,3	;volatile
   534     075B  2F5D               	goto	u271
   535     075C  2F5E               	goto	u270
   536     075D                     u271:
   537     075D  2F62               	goto	l829
   538     075E                     u270:
   539     075E                     l827:
   540                           
   541                           ;llift2.c: 85:         {;llift2.c: 86:             floor=3;
   542     075E  3003               	movlw	3
   543     075F  00F7               	movwf	main@floor
   544     0760  3000               	movlw	0
   545     0761  00F8               	movwf	main@floor+1
   546     0762                     l829:
   547                           
   548                           ;llift2.c: 88:         if(RB0==0)
   549     0762  1806               	btfsc	6,0	;volatile
   550     0763  2F65               	goto	u281
   551     0764  2F66               	goto	u280
   552     0765                     u281:
   553     0765  2F78               	goto	l837
   554     0766                     u280:
   555     0766                     l831:
   556                           
   557                           ;llift2.c: 89:         {;llift2.c: 90:             sensor=0;
   558     0766  01F9               	clrf	main@sensor
   559     0767  01FA               	clrf	main@sensor+1
   560     0768                     l833:
   561                           
   562                           ;llift2.c: 91:               lcd(0,0x80);
   563     0768  3080               	movlw	128
   564     0769  00F2               	movwf	lcd@data
   565     076A  3000               	movlw	0
   566     076B  120A  118A  26C0  120A  118A  	fcall	_lcd
   567     0770                     l835:
   568                           
   569                           ;llift2.c: 92:             string(1,"ground floor");
   570     0770  300E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   571     0771  00F2               	movwf	string@data
   572     0772  3001               	movlw	1
   573     0773  120A  118A  26EC  120A  118A  	fcall	_string
   574     0778                     l837:
   575                           
   576                           ;llift2.c: 94:         if(RB1==0)
   577     0778  1283               	bcf	3,5	;RP0=0, select bank0
   578     0779  1303               	bcf	3,6	;RP1=0, select bank0
   579     077A  1886               	btfsc	6,1	;volatile
   580     077B  2F7D               	goto	u291
   581     077C  2F7E               	goto	u290
   582     077D                     u291:
   583     077D  2F92               	goto	l845
   584     077E                     u290:
   585     077E                     l839:
   586                           
   587                           ;llift2.c: 95:         {;llift2.c: 96:             sensor=1;
   588     077E  3001               	movlw	1
   589     077F  00F9               	movwf	main@sensor
   590     0780  3000               	movlw	0
   591     0781  00FA               	movwf	main@sensor+1
   592     0782                     l841:
   593                           
   594                           ;llift2.c: 97:               lcd(0,0x80);
   595     0782  3080               	movlw	128
   596     0783  00F2               	movwf	lcd@data
   597     0784  3000               	movlw	0
   598     0785  120A  118A  26C0  120A  118A  	fcall	_lcd
   599     078A                     l843:
   600                           
   601                           ;llift2.c: 98:              string(1,"first floor");
   602     078A  3027               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   603     078B  00F2               	movwf	string@data
   604     078C  3001               	movlw	1
   605     078D  120A  118A  26EC  120A  118A  	fcall	_string
   606     0792                     l845:
   607                           
   608                           ;llift2.c: 100:         if(RB2==0)
   609     0792  1283               	bcf	3,5	;RP0=0, select bank0
   610     0793  1303               	bcf	3,6	;RP1=0, select bank0
   611     0794  1906               	btfsc	6,2	;volatile
   612     0795  2F97               	goto	u301
   613     0796  2F98               	goto	u300
   614     0797                     u301:
   615     0797  2FAC               	goto	l853
   616     0798                     u300:
   617     0798                     l847:
   618                           
   619                           ;llift2.c: 101:         {;llift2.c: 102:             sensor=2;
   620     0798  3002               	movlw	2
   621     0799  00F9               	movwf	main@sensor
   622     079A  3000               	movlw	0
   623     079B  00FA               	movwf	main@sensor+1
   624     079C                     l849:
   625                           
   626                           ;llift2.c: 103:               lcd(0,0x80);
   627     079C  3080               	movlw	128
   628     079D  00F2               	movwf	lcd@data
   629     079E  3000               	movlw	0
   630     079F  120A  118A  26C0  120A  118A  	fcall	_lcd
   631     07A4                     l851:
   632                           
   633                           ;llift2.c: 104:              string(1,"second floor");
   634     07A4  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   635     07A5  00F2               	movwf	string@data
   636     07A6  3001               	movlw	1
   637     07A7  120A  118A  26EC  120A  118A  	fcall	_string
   638     07AC                     l853:
   639                           
   640                           ;llift2.c: 106:         if(RB3==0)
   641     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   642     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   643     07AE  1986               	btfsc	6,3	;volatile
   644     07AF  2FB1               	goto	u311
   645     07B0  2FB2               	goto	u310
   646     07B1                     u311:
   647     07B1  2FC6               	goto	l861
   648     07B2                     u310:
   649     07B2                     l855:
   650                           
   651                           ;llift2.c: 107:         {;llift2.c: 108:             sensor=3;
   652     07B2  3003               	movlw	3
   653     07B3  00F9               	movwf	main@sensor
   654     07B4  3000               	movlw	0
   655     07B5  00FA               	movwf	main@sensor+1
   656     07B6                     l857:
   657                           
   658                           ;llift2.c: 109:               lcd(0,0x80);
   659     07B6  3080               	movlw	128
   660     07B7  00F2               	movwf	lcd@data
   661     07B8  3000               	movlw	0
   662     07B9  120A  118A  26C0  120A  118A  	fcall	_lcd
   663     07BE                     l859:
   664                           
   665                           ;llift2.c: 110:              string(1,"third floor");
   666     07BE  301B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   667     07BF  00F2               	movwf	string@data
   668     07C0  3001               	movlw	1
   669     07C1  120A  118A  26EC  120A  118A  	fcall	_string
   670     07C6                     l861:
   671                           
   672                           ;llift2.c: 112:         if(floor>sensor)
   673     07C6  087A               	movf	main@sensor+1,w
   674     07C7  3A80               	xorlw	128
   675     07C8  00F6               	movwf	??_main
   676     07C9  0878               	movf	main@floor+1,w
   677     07CA  3A80               	xorlw	128
   678     07CB  0276               	subwf	??_main,w
   679     07CC  1D03               	skipz
   680     07CD  2FD0               	goto	u325
   681     07CE  0877               	movf	main@floor,w
   682     07CF  0279               	subwf	main@sensor,w
   683     07D0                     u325:
   684     07D0  1803               	skipnc
   685     07D1  2FD3               	goto	u321
   686     07D2  2FD4               	goto	u320
   687     07D3                     u321:
   688     07D3  2FD8               	goto	l865
   689     07D4                     u320:
   690     07D4                     l863:
   691                           
   692                           ;llift2.c: 113:         {;llift2.c: 114:             RC1=0;RC0=1;
   693     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   694     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   695     07D6  1087               	bcf	7,1	;volatile
   696     07D7  1407               	bsf	7,0	;volatile
   697     07D8                     l865:
   698                           
   699                           ;llift2.c: 116:         if(floor<sensor)
   700     07D8  0878               	movf	main@floor+1,w
   701     07D9  3A80               	xorlw	128
   702     07DA  00F6               	movwf	??_main
   703     07DB  087A               	movf	main@sensor+1,w
   704     07DC  3A80               	xorlw	128
   705     07DD  0276               	subwf	??_main,w
   706     07DE  1D03               	skipz
   707     07DF  2FE2               	goto	u335
   708     07E0  0879               	movf	main@sensor,w
   709     07E1  0277               	subwf	main@floor,w
   710     07E2                     u335:
   711     07E2  1803               	skipnc
   712     07E3  2FE5               	goto	u331
   713     07E4  2FE6               	goto	u330
   714     07E5                     u331:
   715     07E5  2FEA               	goto	l869
   716     07E6                     u330:
   717     07E6                     l867:
   718                           
   719                           ;llift2.c: 117:         {;llift2.c: 118:             RC1=1;RC0=0;
   720     07E6  1283               	bcf	3,5	;RP0=0, select bank0
   721     07E7  1303               	bcf	3,6	;RP1=0, select bank0
   722     07E8  1487               	bsf	7,1	;volatile
   723     07E9  1007               	bcf	7,0	;volatile
   724     07EA                     l869:
   725                           
   726                           ;llift2.c: 120:         if(floor==sensor)
   727     07EA  087A               	movf	main@sensor+1,w
   728     07EB  0678               	xorwf	main@floor+1,w
   729     07EC  1D03               	skipz
   730     07ED  2FF0               	goto	u345
   731     07EE  0879               	movf	main@sensor,w
   732     07EF  0677               	xorwf	main@floor,w
   733     07F0                     u345:
   734     07F0  1D03               	skipz
   735     07F1  2FF3               	goto	u341
   736     07F2  2FF4               	goto	u340
   737     07F3                     u341:
   738     07F3  2F42               	goto	l813
   739     07F4                     u340:
   740     07F4                     l871:
   741                           
   742                           ;llift2.c: 121:         {;llift2.c: 122:             RC0=RC1=0;
   743     07F4  1283               	bcf	3,5	;RP0=0, select bank0
   744     07F5  1303               	bcf	3,6	;RP1=0, select bank0
   745     07F6  1087               	bcf	7,1	;volatile
   746     07F7  1007               	bcf	7,0	;volatile
   747     07F8  2F42               	goto	l813
   748     07F9  120A  118A  2800   	ljmp	start
   749     07FC                     __end_of_main:
   750                           
   751                           	psect	text1
   752     06EC                     __ptext1:	
   753 ;; *************** function _string *****************
   754 ;; Defined at:
   755 ;;		line 42 in file "llift2.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;  cmd             1    wreg     unsigned char 
   758 ;;  data            1    2[COMMON] PTR unsigned char 
   759 ;;		 -> STR_4(12), STR_3(13), STR_2(12), STR_1(13), 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  cmd             1    3[COMMON] unsigned char 
   762 ;;  i               2    4[COMMON] int 
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   772 ;;      Params:         1       0       0       0       0
   773 ;;      Locals:         3       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0
   775 ;;      Totals:         4       0       0       0       0
   776 ;;Total ram usage:        4 bytes
   777 ;; Hardware stack levels used: 1
   778 ;; Hardware stack levels required when called: 2
   779 ;; This function calls:
   780 ;;		_enable
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786     06EC                     _string:	
   787                           ;psect for function _string
   788                           
   789                           
   790                           ;incstack = 0
   791                           ; Regs used in _string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   792                           ;string@cmd stored from wreg
   793     06EC  00F3               	movwf	string@cmd
   794     06ED                     l791:
   795                           
   796                           ;llift2.c: 42: void string(char cmd,char data[]);llift2.c: 43: {;llift2.c: 44:     RE0=c
      +                          md;
   797     06ED  1873               	btfsc	string@cmd,0
   798     06EE  2EF0               	goto	u211
   799     06EF  2EF4               	goto	u210
   800     06F0                     u211:
   801     06F0  1283               	bcf	3,5	;RP0=0, select bank0
   802     06F1  1303               	bcf	3,6	;RP1=0, select bank0
   803     06F2  1409               	bsf	9,0	;volatile
   804     06F3  2EF7               	goto	u224
   805     06F4                     u210:
   806     06F4  1283               	bcf	3,5	;RP0=0, select bank0
   807     06F5  1303               	bcf	3,6	;RP1=0, select bank0
   808     06F6  1009               	bcf	9,0	;volatile
   809     06F7                     u224:
   810     06F7                     l793:
   811                           
   812                           ;llift2.c: 45:     for(int i=0;data[i]!='\0';i++)
   813     06F7  01F4               	clrf	string@i
   814     06F8  01F5               	clrf	string@i+1
   815     06F9  2F10               	goto	l801
   816     06FA                     l795:
   817                           
   818                           ;llift2.c: 46:     {;llift2.c: 47:     PORTD=data[i];
   819     06FA  0874               	movf	string@i,w
   820     06FB  0772               	addwf	string@data,w
   821     06FC  0084               	movwf	4
   822     06FD  120A  118A  2003  120A  118A  	fcall	stringdir
   823     0702  1283               	bcf	3,5	;RP0=0, select bank0
   824     0703  1303               	bcf	3,6	;RP1=0, select bank0
   825     0704  0088               	movwf	8	;volatile
   826     0705                     l797:
   827                           
   828                           ;llift2.c: 48:     enable();
   829     0705  120A  118A  26D3  120A  118A  	fcall	_enable
   830     070A                     l799:
   831                           
   832                           ;llift2.c: 49:     }
   833     070A  3001               	movlw	1
   834     070B  07F4               	addwf	string@i,f
   835     070C  1803               	skipnc
   836     070D  0AF5               	incf	string@i+1,f
   837     070E  3000               	movlw	0
   838     070F  07F5               	addwf	string@i+1,f
   839     0710                     l801:
   840     0710  0874               	movf	string@i,w
   841     0711  0772               	addwf	string@data,w
   842     0712  0084               	movwf	4
   843     0713  120A  118A  2003  120A  118A  	fcall	stringdir
   844     0718  3A00               	xorlw	0
   845     0719  1D03               	skipz
   846     071A  2F1C               	goto	u231
   847     071B  2F1D               	goto	u230
   848     071C                     u231:
   849     071C  2EFA               	goto	l795
   850     071D                     u230:
   851     071D                     l66:
   852     071D  0008               	return
   853     071E                     __end_of_string:
   854                           
   855                           	psect	text2
   856     06C0                     __ptext2:	
   857 ;; *************** function _lcd *****************
   858 ;; Defined at:
   859 ;;		line 36 in file "llift2.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  cmd             1    wreg     unsigned char 
   862 ;;  data            1    2[COMMON] unsigned char 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  cmd             1    3[COMMON] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, status,2, status,0, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         1       0       0       0       0
   875 ;;      Locals:         1       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0
   877 ;;      Totals:         2       0       0       0       0
   878 ;;Total ram usage:        2 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; Hardware stack levels required when called: 2
   881 ;; This function calls:
   882 ;;		_enable
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888     06C0                     _lcd:	
   889                           ;psect for function _lcd
   890                           
   891                           
   892                           ;incstack = 0
   893                           ; Regs used in _lcd: [wreg+status,2+status,0+pclath+cstack]
   894                           ;lcd@cmd stored from wreg
   895     06C0  00F3               	movwf	lcd@cmd
   896     06C1                     l785:
   897                           
   898                           ;llift2.c: 36: void lcd(char cmd,char data );llift2.c: 37: {;llift2.c: 38:     RE0=cmd;
   899     06C1  1873               	btfsc	lcd@cmd,0
   900     06C2  2EC4               	goto	u191
   901     06C3  2EC8               	goto	u190
   902     06C4                     u191:
   903     06C4  1283               	bcf	3,5	;RP0=0, select bank0
   904     06C5  1303               	bcf	3,6	;RP1=0, select bank0
   905     06C6  1409               	bsf	9,0	;volatile
   906     06C7  2ECB               	goto	u204
   907     06C8                     u190:
   908     06C8  1283               	bcf	3,5	;RP0=0, select bank0
   909     06C9  1303               	bcf	3,6	;RP1=0, select bank0
   910     06CA  1009               	bcf	9,0	;volatile
   911     06CB                     u204:
   912     06CB                     l787:
   913                           
   914                           ;llift2.c: 39:     PORTD=data;
   915     06CB  0872               	movf	lcd@data,w
   916     06CC  0088               	movwf	8	;volatile
   917     06CD                     l789:
   918                           
   919                           ;llift2.c: 40:     enable();
   920     06CD  120A  118A  26D3  120A  118A  	fcall	_enable
   921     06D2                     l60:
   922     06D2  0008               	return
   923     06D3                     __end_of_lcd:
   924                           
   925                           	psect	text3
   926     06D3                     __ptext3:	
   927 ;; *************** function _enable *****************
   928 ;; Defined at:
   929 ;;		line 29 in file "llift2.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;		None
   932 ;; Auto vars:     Size  Location     Type
   933 ;;		None
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0, pclath, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       0       0       0       0
   944 ;;      Locals:         0       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0
   946 ;;      Totals:         0       0       0       0       0
   947 ;;Total ram usage:        0 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; Hardware stack levels required when called: 1
   950 ;; This function calls:
   951 ;;		_delay
   952 ;; This function is called by:
   953 ;;		_lcd
   954 ;;		_string
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958     06D3                     _enable:	
   959                           ;psect for function _enable
   960                           
   961     06D3                     l779:	
   962                           ;incstack = 0
   963                           ; Regs used in _enable: [wreg+status,2+status,0+pclath+cstack]
   964                           
   965                           
   966                           ;llift2.c: 31:     RE1=1;
   967     06D3  1283               	bcf	3,5	;RP0=0, select bank0
   968     06D4  1303               	bcf	3,6	;RP1=0, select bank0
   969     06D5  1489               	bsf	9,1	;volatile
   970     06D6                     l781:
   971                           
   972                           ;llift2.c: 32:     delay(1000);
   973     06D6  30E8               	movlw	232
   974     06D7  00F0               	movwf	delay@a
   975     06D8  3003               	movlw	3
   976     06D9  00F1               	movwf	delay@a+1
   977     06DA  120A  118A  26B1  120A  118A  	fcall	_delay
   978     06DF                     l783:
   979                           
   980                           ;llift2.c: 33:     RE1=0;
   981     06DF  1283               	bcf	3,5	;RP0=0, select bank0
   982     06E0  1303               	bcf	3,6	;RP1=0, select bank0
   983     06E1  1089               	bcf	9,1	;volatile
   984                           
   985                           ;llift2.c: 34:     delay(1000);
   986     06E2  30E8               	movlw	232
   987     06E3  00F0               	movwf	delay@a
   988     06E4  3003               	movlw	3
   989     06E5  00F1               	movwf	delay@a+1
   990     06E6  120A  118A  26B1  120A  118A  	fcall	_delay
   991     06EB                     l57:
   992     06EB  0008               	return
   993     06EC                     __end_of_enable:
   994                           
   995                           	psect	text4
   996     06B1                     __ptext4:	
   997 ;; *************** function _delay *****************
   998 ;; Defined at:
   999 ;;		line 25 in file "llift2.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  a               2    0[COMMON] unsigned int 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1013 ;;      Params:         2       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0
  1016 ;;      Totals:         2       0       0       0       0
  1017 ;;Total ram usage:        2 bytes
  1018 ;; Hardware stack levels used: 1
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_enable
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026     06B1                     _delay:	
  1027                           ;psect for function _delay
  1028                           
  1029     06B1                     l775:	
  1030                           ;incstack = 0
  1031                           ; Regs used in _delay: [wreg+status,2+status,0]
  1032                           
  1033     06B1                     l777:	
  1034                           ;llift2.c: 25: void delay(unsigned int a);llift2.c: 26: {;llift2.c: 27:    while(a--) ;
  1035                           
  1036     06B1  3001               	movlw	1
  1037     06B2  02F0               	subwf	delay@a,f
  1038     06B3  3000               	movlw	0
  1039     06B4  1C03               	skipc
  1040     06B5  03F1               	decf	delay@a+1,f
  1041     06B6  02F1               	subwf	delay@a+1,f
  1042     06B7  0A70               	incf	delay@a,w
  1043     06B8  1D03               	skipz
  1044     06B9  2EBE               	goto	u181
  1045     06BA  0A71               	incf	delay@a+1,w
  1046     06BB  1D03               	btfss	3,2
  1047     06BC  2EBE               	goto	u181
  1048     06BD  2EBF               	goto	u180
  1049     06BE                     u181:
  1050     06BE  2EB1               	goto	l777
  1051     06BF                     u180:
  1052     06BF                     l54:
  1053     06BF  0008               	return
  1054     06C0                     __end_of_delay:
  1055     007E                     btemp	set	126	;btemp
  1056     007E                     wtemp0	set	126
  1057                           
  1058                           	psect	idloc
  1059                           
  1060                           ;Config register IDLOC0 @ 0x2000
  1061                           ;	unspecified, using default values
  1062     2000                     	org	8192
  1063     2000  3FFF               	dw	16383
  1064                           
  1065                           ;Config register IDLOC1 @ 0x2001
  1066                           ;	unspecified, using default values
  1067     2001                     	org	8193
  1068     2001  3FFF               	dw	16383
  1069                           
  1070                           ;Config register IDLOC2 @ 0x2002
  1071                           ;	unspecified, using default values
  1072     2002                     	org	8194
  1073     2002  3FFF               	dw	16383
  1074                           
  1075                           ;Config register IDLOC3 @ 0x2003
  1076                           ;	unspecified, using default values
  1077     2003                     	org	8195
  1078     2003  3FFF               	dw	16383
  1079                           
  1080                           	psect	config
  1081                           
  1082                           ;Config register CONFIG1 @ 0x2007
  1083                           ;	Oscillator Selection bits
  1084                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1085                           ;	Watchdog Timer Enable bit
  1086                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1087                           ;	Power-up Timer Enable bit
  1088                           ;	PWRTE = ON, PWRT enabled
  1089                           ;	RE3/MCLR pin function select bit
  1090                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1091                           ;	Code Protection bit
  1092                           ;	CP = OFF, Program memory code protection is disabled
  1093                           ;	Data Code Protection bit
  1094                           ;	CPD = OFF, Data memory code protection is disabled
  1095                           ;	Brown Out Reset Selection bits
  1096                           ;	BOREN = OFF, BOR disabled
  1097                           ;	Internal External Switchover bit
  1098                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1099                           ;	Fail-Safe Clock Monitor Enabled bit
  1100                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1101                           ;	Low Voltage Programming Enable bit
  1102                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1103                           ;	In-Circuit Debugger Mode bit
  1104                           ;	DEBUG = 0x1, unprogrammed default
  1105     2007                     	org	8199
  1106     2007  2CE4               	dw	11492
  1107                           
  1108                           ;Config register CONFIG2 @ 0x2008
  1109                           ;	Brown-out Reset Selection bit
  1110                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1111                           ;	Flash Program Memory Self Write Enable bits
  1112                           ;	WRT = OFF, Write protection off
  1113     2008                     	org	8200
  1114     2008  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    string@data	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[12]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_string
    _enable->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1404
                                              6 COMMON     5     5      0
                                _lcd
                             _string
 ---------------------------------------------------------------------------------
 (1) _string                                               4     3      1     590
                                              2 COMMON     4     3      1
                             _enable
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  2     1      1     674
                                              2 COMMON     2     1      1
                             _enable
 ---------------------------------------------------------------------------------
 (2) _enable                                               0     0      0     174
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd
     _enable
       _delay
   _string
     _enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Aug 02 17:30:26 2024

                      pc 0002                       l60 06D2                       l54 06BF  
                     l57 06EB                       l66 071D                       fsr 0004  
                    l801 0710                      l811 073A                      l803 071E  
                    l821 0752                      l813 0742                      l805 0725  
                    l831 0766                      l823 0756                      l815 0748  
                    l807 0729                      l841 0782                      l833 0768  
                    l825 075A                      l817 074A                      l809 0732  
                    l851 07A4                      l843 078A                      l835 0770  
                    l827 075E                      l819 074E                      l781 06D6  
                    l861 07C6                      l853 07AC                      l845 0792  
                    l837 0778                      l829 0762                      l775 06B1  
                    l783 06DF                      l791 06ED                      l871 07F4  
                    l863 07D4                      l855 07B2                      l847 0798  
                    l839 077E                      l777 06B1                      l785 06C1  
                    l793 06F7                      l865 07D8                      l857 07B6  
                    l849 079C                      l779 06D3                      l787 06CB  
                    l795 06FA                      l867 07E6                      l859 07BE  
                    l789 06CD                      l797 0705                      l869 07EA  
                    l799 070A                      _RA0 0028                      _RA1 0029  
                    _RA2 002A                      _RB0 0030                      _RA3 002B  
                    _RB1 0031                      _RB2 0032                      _RC0 0038  
                    _RB3 0033                      _RC1 0039                      _RE0 0048  
                    _RE1 0049                      u210 06F4                      u211 06F0  
                    u204 06CB                      u300 0798                      u301 0797  
                    u230 071D                      u310 07B2                      u231 071C  
                    u311 07B1                      u224 06F7                      u320 07D4  
                    u240 0748                      u321 07D3                      u241 0747  
                    u330 07E6                      u250 074E                      u331 07E5  
                    u251 074D                      u180 06BF                      u340 07F4  
                    u260 0756                      u181 06BE                      u341 07F3  
                    u325 07D0                      u261 0755                      u190 06C8  
                    u270 075E                      u191 06C4                      u335 07E2  
                    u271 075D                      u280 0766                      u345 07F0  
                    u281 0765                      u290 077E                      u291 077D  
                    _lcd 06C0                      fsr0 0004                     ?_lcd 0072  
                   STR_1 0016                     STR_2 002F                     STR_3 0009  
                   STR_4 0023                     _main 071E                     btemp 007E  
                   start 0000                    ??_lcd 0073                    ?_main 0070  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _delay 06B1  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0076  
                 ?_delay 0070                   _ANSELH 0189                   _enable 06D3  
                 delay@a 0070                   lcd@cmd 0073                   _string 06EC  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_delay 06C0  
                ??_delay 0072               __pmaintext 071E                  ?_enable 0070  
                ?_string 0072               __stringtab 0003                  __ptext1 06EC  
                __ptext2 06C0                  __ptext3 06D3                  __ptext4 06B1  
                lcd@data 0072     end_of_initialization 07FC                  string@i 0074  
             main@sensor 0079           __end_of_enable 06EC           __end_of_string 071E  
    start_initialization 07FC              __end_of_lcd 06D3                 ??_enable 0072  
               ??_string 0073                ___latbits 0002                __pstrings 0003  
            __stringbase 0008                main@floor 0077       __end_of__stringtab 0009  
             string@data 0072                string@cmd 0073                stringcode 0003  
               stringdir 0003                 stringtab 0003  
